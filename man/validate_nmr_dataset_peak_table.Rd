% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nmr_dataset_peak_table.R
\name{validate_nmr_dataset_peak_table}
\alias{validate_nmr_dataset_peak_table}
\title{Validate nmr_dataset_peak_table objects}
\usage{
validate_nmr_dataset_peak_table(nmr_dataset_peak_table)
}
\arguments{
\item{nmr_dataset_peak_table}{An \link{nmr_dataset_peak_table} object}
}
\value{
The \link{nmr_dataset_peak_table} unchanged

This function is useful for its side-effects: Stopping in case of error
}
\description{
Validate nmr_dataset_peak_table objects
}
\examples{
dir_to_demo_dataset <- system.file("dataset-demo", package = "AlpsNMR")
nmr_dataset <- nmr_read_samples_dir(dir_to_demo_dataset)
nmr_dataset <- nmr_interpolate_1D(nmr_dataset, axis = c(min = -0.5, max = 10, by = 2.3E-4))

# 1.Peak detection in the dataset.
peak_data <- nmr_detect_peaks(nmr_dataset,
                              nDivRange_ppm = 0.1, # Size of detection segments
                              scales = seq(1, 16, 2),
                              baselineThresh = 0, # Minimum peak intensity
                              SNR.Th = 4) # Signal to noise ratio

# 2.Find the reference spectrum to align with.
NMRExp_ref <- nmr_align_find_ref(nmr_dataset, peak_data)

# 3.Spectra alignment using the ref spectrum and a maximum alignment shift
nmr_dataset <- nmr_align(nmr_dataset, # the dataset
                         peak_data, # detected peaks
                         NMRExp_ref = NMRExp_ref, # ref spectrum
                         maxShift_ppm = 0.0015, # max alignment shift
                         acceptLostPeak = FALSE) # lost peaks

# 4.PEAK INTEGRATION (please, consider previous normalization step).
# First we take the peak table from the reference spectrum
peak_data_ref <- filter(peak_data, NMRExperiment == NMRExp_ref)

# Then we integrate spectra considering the peaks from the ref spectrum
nmr_peak_table <- nmr_integrate_peak_positions(
                      samples = nmr_dataset,
                      peak_pos_ppm = peak_data_ref$ppm,
                      peak_width_ppm = NULL)

validate_nmr_dataset_peak_table(nmr_peak_table)

#If you wanted the final peak table before machine learning you can run
nmr_peak_table_completed <- get_integration_with_metadata(nmr_peak_table)

}
\seealso{
Other nmr_dataset_peak_table functions: 
\code{\link{[.nmr_dataset_peak_table}()},
\code{\link{format.nmr_dataset_peak_table}()},
\code{\link{is.nmr_dataset_peak_table}()},
\code{\link{load_and_save_functions}},
\code{\link{new_nmr_dataset_peak_table}()},
\code{\link{nmr_meta_add}()},
\code{\link{nmr_meta_export}()},
\code{\link{nmr_meta_get_column}()},
\code{\link{nmr_meta_get}()},
\code{\link{print.nmr_dataset_peak_table}()}

Other class helper functions: 
\code{\link{format.nmr_dataset_1D}()},
\code{\link{format.nmr_dataset_peak_table}()},
\code{\link{format.nmr_dataset}()},
\code{\link{is.nmr_dataset_1D}()},
\code{\link{is.nmr_dataset_peak_table}()},
\code{\link{new_nmr_dataset_1D}()},
\code{\link{new_nmr_dataset_peak_table}()},
\code{\link{new_nmr_dataset}()},
\code{\link{print.nmr_dataset_1D}()},
\code{\link{print.nmr_dataset_peak_table}()},
\code{\link{print.nmr_dataset}()},
\code{\link{validate_nmr_dataset_family}()},
\code{\link{validate_nmr_dataset}()}
}
\concept{class helper functions}
\concept{nmr_dataset_peak_table functions}
